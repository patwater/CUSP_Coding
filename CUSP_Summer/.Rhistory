install.packages("swirl")
help(upgrade)
install.packages("swirl")
install.packages("swirl")
library("swirl")
swirl()
cars
dataset$variable(mpgCity)
swirl
swirl()
swirl()
swirl()
5+7
x<-5+7
x
y<-x-3
y
demo()
demo(graphics)
Top_Earners_2013 <- read.csv("C:/Users/Patwater/Desktop/Top_Earners_2013.csv")
View(Top_Earners_2013)
library(plotly)
library(devtools)
install.packages("devtools")
library(devtools)
find_rtools()
rversion()
versionR()
R.version(0)
R.version()
R.version()
library(devtools)
install.packages("devtools")
library(devtools)
library(devtools)
install_github("ropensci/plotly")
library(plotly)
set_credentials_file(username="patwater", api_key="4a79kbxnzj")
py <- plotly()
hist(Top_Earners_2013$Regular.pay)
Top_Earners_2013 <- read.csv("C:/Users/Patwater/Desktop/Top_Earners_2013.csv")
View(Top_Earners_2013)
hist(Top_Earners_2013$Regular.pay)
hist(Top_Earners_2013$Regular.pay)
pay <- Top_Earners_2013$Regular.pay
hist(pay)
table(pay)
table(Top_Earners_2013$Regular.pay)
View(Top_Earners_2013)
View(Top_Earners_2013)
table(Top_Earners_2013$Regular.pay)
table(Top_Earners_2013)
table(Top_Earners_2013$Year)
table(Top_Earners_2013$Regular.Pay)
hist(Top_Earners_2013$Regular.Pay)
response <- p$plotly(Top_Earners_2013$Regular.Pay, kwargs=list(filename="basic-histogram", fileopt="overwrite"))
response <- py$plotly(Top_Earners_2013$Regular.Pay, kwargs=list(filename="basic-histogram", fileopt="overwrite"))
trace1 <= list(Top_Earners_2013$Regular.Pay = Top_Earners_2013$Regular.Pay, type = "histogram")
trace1 <= list(x = Top_Earners_2013$Regular.Pay, type = "histogram")
x = rnorm(500)
trace1 <- list(
x = x,
type = "histogram"
)
response <- p$plotly(trace0, kwargs=list(filename="basic-histogram", fileopt="overwrite"))
response <- py$plotly(trace0, kwargs=list(filename="basic-histogram", fileopt="overwrite"))
response <- py$plotly(trace1, kwargs=list(filename="basic-histogram", fileopt="overwrite"))
url <- response$url
filename <- response$filename
trace2 <- list(
+     Top_Earners_2013$Regular.Pay = Top_Earners_2013$Regular.Pay,
+     type = "histogram"
+ )
trace2 <- list(
+     x = Top_Earners_2013$Regular.Pay,
+     type = "histogram"
+ )
trace2 <- list(x = Top_Earners_2013$Regular.Pay, type = "histogram")
response <- py$plotly(trace2, kwargs=list(filename="LACityPayHistogram", fileopt="overwrite"))
summary(Top_Earners_2013$Regular.Pay)
127*(2014-32/1.43)
sqrt(5213.4/14.3)
4**.5
ln(19**5.5)
log(19**5.5)
e
exp(2.47/1.05)
X <- seq(5,190,5)
X
Y <- seq(86,49,-1)
Y
Z <- seq(53.0,108.5,1.5)
Z
M <- X*Y-Z
M
M[15]
M[0]
M[1]
M[20]
M[32]
max(M)
min(M)
max(M)-min(M)
6900 < M <4000
6900 < M < 4000
M[M<4900 AND M > 4000]
M[M<4900 | M > 4000]
M<4900
M[M<4900]
M[M<4900 | M>4000]
intersect(M[M<4900], M[M>4000])
sum(M)
mean(M), median(M)
mean(M)
median(M)
standarddeviation(M)
stddev(M)
sd(M)
quintile(M,c(.4,.8))
quantile(M,c(.4,.8))
A <- Matrix(c(1,6,7,10,2,5,8,11,3,4,9,12),3,4)
A <- matrix(c(1,6,7,10,2,5,8,11,3,4,9,12),3,4)
A
A <- matrix(c(1,6,7,10,2,5,8,11,3,4,9,12),3,4,True)
A <- matrix(c(1,6,7,10,2,5,8,11,3,4,9,12),3,4,TRUE)
A
B <-matrix(c(5,8,4,9,7,1,6,2),4,2)
B
Z <-matrix(c(6,-3,7,4),2,2)
A*B*Z
B*A
A*B
A <-matrix(c(1,2,3,6,5,4,7,8,9,10,11,12),3,4)
A*B
read.csv('Assignment+2_R_Data_CherryTrees.csv', header = TRUE, sep = ",", quote = "\"",
dec = ".", fill = TRUE, comment.char = "", ...)
read.csv(Assignment+2_R_Data_CherryTrees.csv, header = TRUE, sep = ",", quote = "\"",
dec = ".", fill = TRUE, comment.char = "", ...)
setwd("~/My Dropbox/Level Up Data/CUSP")
read.csv("Assignment+2_R_Data_CherryTrees.csv"", header = TRUE, sep = ",", quote = "\"",
dec = ".", fill = TRUE, comment.char = "", ...)
`Assignment+2_R_Data_CherryTrees` <- read.csv("~/My Dropbox/Level Up Data/CUSP/Assignment+2_R_Data_CherryTrees.csv")
View(`Assignment+2_R_Data_CherryTrees`)
summary(girth,height,volume)
summary(Girth,Height,Volume)
summary(Girth)
str(Assignment+2_R_Data_CherryTrees.csv)
View(`Assignment+2_R_Data_CherryTrees`)
View(`Assignment+2_R_Data_CherryTrees`)
View(B)
str(`Assignment+2_R_Data_CherryTrees`)
summary(`Assignment+2_R_Data_CherryTrees`$Girth)
summary(`Assignment+2_R_Data_CherryTrees`$Height)
summary(`Assignment+2_R_Data_CherryTrees`$Volume)
barplot(`Assignment+2_R_Data_CherryTrees`$Girth)
hist(`Assignment+2_R_Data_CherryTrees`$Girth)
hist(`Assignment+2_R_Data_CherryTrees`$Girth,`Assignment+2_R_Data_CherryTrees`$Height)
require(plotrix)
library(lattice)
hist(`Assignment+2_R_Data_CherryTrees`$Height)
hist(`Assignment+2_R_Data_CherryTrees`$Volume)
multi.hist(`Assignment+2_R_Data_CherryTrees`)
library(multi.hist)
import(multi.hist)
install.packages("multi.hist")
library(multi.hist)
multhist(`Assignment+2_R_Data_CherryTrees`)
library(ggplot)
install.packages("ggplot")
library("ggplot2", lib.loc="C:/Users/Patwater/Documents/R/win-library/3.1")
detach("package:lattice", unload=TRUE)
ggplot(`Assignment+2_R_Data_CherryTrees`$Girth)
ggplot2(`Assignment+2_R_Data_CherryTrees`$Girth)
CherryTrees <- read.csv("~/My Dropbox/Level Up Data/CUSP/Assignment+2_R_Data_CherryTrees.csv")
CherryTrees$Girth
ggplot2(CherryTrees$Girth,data=CherryTrees$Girth[,2],geom="histogram")
ggplot(CherryTrees$Girth,data=CherryTrees$Girth[,2],geom="histogram")
ggplot(CherryTrees$Girth,geom="histogram")
ggplot(CherryTrees$Girth,data=CherryTrees$Girth[2:],geom="histogram")
ggplot(CherryTrees$Girth,data=CherryTrees$Girth[2:31],geom="histogram")
qplot(CherryTrees$Girth,data=CherryTrees$Girth[2:31],geom="histogram")
qplot(CherryTrees$Girth,data=CherryTrees$Girth[,2],geom="histogram")
qplot(CherryTrees$Girth,data=CherryTrees$Girth[2],geom="histogram")
qplot(CherryTrees$Girth,geom="histogram")
ggplot(CherryTrees$Girth,geom="histogram")
qplot(CherryTrees$Girth,aes(x=vals)) + geom_histogram()
ggplot(CherryTrees$Girth,aes(x=vals)) + geom_histogram()
ggplot(CherryTrees$Girth,geom="histogram")
ggplot(CherryTrees$Girth, aes(x=rating, fill=cond)) +
geom_histogram(binwidth=.5, alpha=.5, position="identity") +
geom_vline(data=cdf, aes(xintercept=rating.mean,  colour=cond),
linetype="dashed", size=1)
scatter(CherryTrees$Girth,CherryTrees$Height)
qplot(CherryTrees$Girth,CherryTrees$Height)
CherryTrees$Level <- L3
CherryTrees$Level <- "L3"
view(CherryTrees)
View(CherryTrees)
View(CherryTrees)
CherryTrees$Level[CherryTrees$Height < 80] <- "L"
CherryTrees$Level[CherryTrees$Height < 80] <- "L2"
CherryTrees$Level[CherryTrees$Height < 70] <- "L1"
View(CherryTrees)
View(CherryTrees)
summary(CherryTrees$Level)
Level[Level="L1"]
CherryTrees$Level[CherryTrees$Level="L1"]
CherryTrees$Level[CherryTrees$Level=="L1"]
len(CherryTrees$Level[CherryTrees$Level=="L1"])
as.data.frame(table(CherryTrees$Level))
ggplot(dat, aes(x=CherryTrees$Girth, y=CherryTrees$Height)) +
geom_point(shape=1)
ggplot(CherryTrees, aes(x=CherryTrees$Girth, y=CherryTrees$Height)) +
geom_point(shape=1)
ggplot(CherryTrees, aes(x=CherryTrees$Girth, y=CherryTrees$Height)) +
geom_point(shape=1, color=1)
ggplot(CherryTrees, aes(x=CherryTrees$Height, y=CherryTrees$Girth)) +
geom_point(shape=2, color=2)
ggplot(CherryTrees, aes(x=CherryTrees$Volume, y=CherryTrees$Girth)) +
geom_point(shape=3, color=3)
ggplot(CherryTrees, aes(x=CherryTrees$Volume, y=CherryTrees$Girth)) +
geom_point(shape=3, color=3) +
geom_smooth(method=lm, se =TRUE)
